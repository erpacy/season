<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.seasonteam.season.mapper.SpendIncomeMapper" >
  <resultMap id="BaseResultMap" type="org.seasonteam.season.model.SpendIncome" >
    <id column="si_id" property="siId" jdbcType="INTEGER" />
    <result column="hd_id" property="hdId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="si_des" property="siDes" jdbcType="VARCHAR" />
    <result column="si_type" property="siType" jdbcType="VARCHAR" />
    <result column="si_money" property="siMoney" jdbcType="DOUBLE" />
    <result column="si_date" property="siDate" jdbcType="DATE" />
    <result column="si_time" property="siTime" jdbcType="TIME" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    si_id, hd_id, account_id, si_des, si_type, si_money, si_date, si_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.seasonteam.season.model.SpendIncomeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from spend_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from spend_income
    where si_id = #{siId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from spend_income
    where si_id = #{siId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.seasonteam.season.model.SpendIncomeExample" >
    delete from spend_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.seasonteam.season.model.SpendIncome" >
    insert into spend_income (si_id, hd_id, account_id, 
      si_des, si_type, si_money, 
      si_date, si_time)
    values (#{siId,jdbcType=INTEGER}, #{hdId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{siDes,jdbcType=VARCHAR}, #{siType,jdbcType=VARCHAR}, #{siMoney,jdbcType=DOUBLE}, 
      #{siDate,jdbcType=DATE}, #{siTime,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="org.seasonteam.season.model.SpendIncome" >
    insert into spend_income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="siId != null" >
        si_id,
      </if>
      <if test="hdId != null" >
        hd_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="siDes != null" >
        si_des,
      </if>
      <if test="siType != null" >
        si_type,
      </if>
      <if test="siMoney != null" >
        si_money,
      </if>
      <if test="siDate != null" >
        si_date,
      </if>
      <if test="siTime != null" >
        si_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="siId != null" >
        #{siId,jdbcType=INTEGER},
      </if>
      <if test="hdId != null" >
        #{hdId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="siDes != null" >
        #{siDes,jdbcType=VARCHAR},
      </if>
      <if test="siType != null" >
        #{siType,jdbcType=VARCHAR},
      </if>
      <if test="siMoney != null" >
        #{siMoney,jdbcType=DOUBLE},
      </if>
      <if test="siDate != null" >
        #{siDate,jdbcType=DATE},
      </if>
      <if test="siTime != null" >
        #{siTime,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.seasonteam.season.model.SpendIncomeExample" resultType="java.lang.Integer" >
    select count(*) from spend_income
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update spend_income
    <set >
      <if test="record.siId != null" >
        si_id = #{record.siId,jdbcType=INTEGER},
      </if>
      <if test="record.hdId != null" >
        hd_id = #{record.hdId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.siDes != null" >
        si_des = #{record.siDes,jdbcType=VARCHAR},
      </if>
      <if test="record.siType != null" >
        si_type = #{record.siType,jdbcType=VARCHAR},
      </if>
      <if test="record.siMoney != null" >
        si_money = #{record.siMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.siDate != null" >
        si_date = #{record.siDate,jdbcType=DATE},
      </if>
      <if test="record.siTime != null" >
        si_time = #{record.siTime,jdbcType=TIME},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update spend_income
    set si_id = #{record.siId,jdbcType=INTEGER},
      hd_id = #{record.hdId,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      si_des = #{record.siDes,jdbcType=VARCHAR},
      si_type = #{record.siType,jdbcType=VARCHAR},
      si_money = #{record.siMoney,jdbcType=DOUBLE},
      si_date = #{record.siDate,jdbcType=DATE},
      si_time = #{record.siTime,jdbcType=TIME}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.seasonteam.season.model.SpendIncome" >
    update spend_income
    <set >
      <if test="hdId != null" >
        hd_id = #{hdId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="siDes != null" >
        si_des = #{siDes,jdbcType=VARCHAR},
      </if>
      <if test="siType != null" >
        si_type = #{siType,jdbcType=VARCHAR},
      </if>
      <if test="siMoney != null" >
        si_money = #{siMoney,jdbcType=DOUBLE},
      </if>
      <if test="siDate != null" >
        si_date = #{siDate,jdbcType=DATE},
      </if>
      <if test="siTime != null" >
        si_time = #{siTime,jdbcType=TIME},
      </if>
    </set>
    where si_id = #{siId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.seasonteam.season.model.SpendIncome" >
    update spend_income
    set hd_id = #{hdId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      si_des = #{siDes,jdbcType=VARCHAR},
      si_type = #{siType,jdbcType=VARCHAR},
      si_money = #{siMoney,jdbcType=DOUBLE},
      si_date = #{siDate,jdbcType=DATE},
      si_time = #{siTime,jdbcType=TIME}
    where si_id = #{siId,jdbcType=INTEGER}
  </update>
</mapper>