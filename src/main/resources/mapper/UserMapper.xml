<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.seasonteam.season.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="org.seasonteam.season.model.User" >
    <id column="UID" property="uid" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    <result column="APPID" property="appid" jdbcType="VARCHAR" />
    <result column="USERIMAGE" property="userimage" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="TOKEN" property="token" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UID, USERNAME, PASSWORD, REG_TIME, APPID, USERIMAGE, EMAIL, PHONE, TOKEN
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.seasonteam.season.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UID = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where UID = #{uid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.seasonteam.season.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.seasonteam.season.model.User" >
    insert into user (UID, USERNAME, PASSWORD, 
      REG_TIME, APPID, USERIMAGE, 
      EMAIL, PHONE, TOKEN
      )
    values (#{uid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{appid,jdbcType=VARCHAR}, #{userimage,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.seasonteam.season.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        UID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="regTime != null" >
        REG_TIME,
      </if>
      <if test="appid != null" >
        APPID,
      </if>
      <if test="userimage != null" >
        USERIMAGE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="token != null" >
        TOKEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null" >
        #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.seasonteam.season.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null" >
        REG_TIME = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appid != null" >
        APPID = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.userimage != null" >
        USERIMAGE = #{record.userimage,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null" >
        TOKEN = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set UID = #{record.uid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      REG_TIME = #{record.regTime,jdbcType=TIMESTAMP},
      APPID = #{record.appid,jdbcType=VARCHAR},
      USERIMAGE = #{record.userimage,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      TOKEN = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.seasonteam.season.model.User" >
    update user
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        REG_TIME = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appid != null" >
        APPID = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null" >
        USERIMAGE = #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where UID = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.seasonteam.season.model.User" >
    update user
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      REG_TIME = #{regTime,jdbcType=TIMESTAMP},
      APPID = #{appid,jdbcType=VARCHAR},
      USERIMAGE = #{userimage,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      TOKEN = #{token,jdbcType=VARCHAR}
    where UID = #{uid,jdbcType=VARCHAR}
  </update>
</mapper>