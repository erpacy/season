<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.seasonteam.season.mapper.BudgetMapper" >
  <resultMap id="BaseResultMap" type="org.seasonteam.season.model.Budget" >
    <id column="BUDGET_ID" property="budgetId" jdbcType="VARCHAR" />
    <result column="UID" property="uid" jdbcType="VARCHAR" />
    <result column="BDATETIME" property="bdatetime" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BUDGET_ID, UID, BDATETIME, MONEY
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.seasonteam.season.model.BudgetExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from budget
    where BUDGET_ID = #{budgetId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from budget
    where BUDGET_ID = #{budgetId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.seasonteam.season.model.BudgetExample" >
    delete from budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.seasonteam.season.model.Budget" >
    insert into budget (BUDGET_ID, UID, BDATETIME, 
      MONEY)
    values (#{budgetId,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{bdatetime,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="org.seasonteam.season.model.Budget" >
    insert into budget
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="budgetId != null" >
        BUDGET_ID,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="bdatetime != null" >
        BDATETIME,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="budgetId != null" >
        #{budgetId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bdatetime != null" >
        #{bdatetime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.seasonteam.season.model.BudgetExample" resultType="java.lang.Integer" >
    select count(*) from budget
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update budget
    <set >
      <if test="record.budgetId != null" >
        BUDGET_ID = #{record.budgetId,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.bdatetime != null" >
        BDATETIME = #{record.bdatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        MONEY = #{record.money,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update budget
    set BUDGET_ID = #{record.budgetId,jdbcType=VARCHAR},
      UID = #{record.uid,jdbcType=VARCHAR},
      BDATETIME = #{record.bdatetime,jdbcType=VARCHAR},
      MONEY = #{record.money,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.seasonteam.season.model.Budget" >
    update budget
    <set >
      <if test="uid != null" >
        UID = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bdatetime != null" >
        BDATETIME = #{bdatetime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        MONEY = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where BUDGET_ID = #{budgetId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.seasonteam.season.model.Budget" >
    update budget
    set UID = #{uid,jdbcType=VARCHAR},
      BDATETIME = #{bdatetime,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DOUBLE}
    where BUDGET_ID = #{budgetId,jdbcType=VARCHAR}
  </update>
</mapper>