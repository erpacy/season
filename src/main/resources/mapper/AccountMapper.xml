<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.seasonteam.season.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="org.seasonteam.season.model.Account" >
    <id column="ACCOUNT_ID" property="accountId" jdbcType="VARCHAR" />
    <result column="USERID" property="userid" jdbcType="VARCHAR" />
    <result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
    <result column="ACCOUNT_DES" property="accountDes" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ACCOUNT_ID, USERID, ACCOUNT_NAME, ACCOUNT_DES, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.seasonteam.season.model.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from account
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.seasonteam.season.model.AccountExample" >
    delete from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.seasonteam.season.model.Account" >
    insert into account (ACCOUNT_ID, USERID, ACCOUNT_NAME, 
      ACCOUNT_DES, CREATE_TIME)
    values (#{accountId,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{accountDes,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.seasonteam.season.model.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        ACCOUNT_ID,
      </if>
      <if test="userid != null" >
        USERID,
      </if>
      <if test="accountName != null" >
        ACCOUNT_NAME,
      </if>
      <if test="accountDes != null" >
        ACCOUNT_DES,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountDes != null" >
        #{accountDes,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.seasonteam.season.model.AccountExample" resultType="java.lang.Integer" >
    select count(*) from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account
    <set >
      <if test="record.accountId != null" >
        ACCOUNT_ID = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountDes != null" >
        ACCOUNT_DES = #{record.accountDes,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account
    set ACCOUNT_ID = #{record.accountId,jdbcType=VARCHAR},
      USERID = #{record.userid,jdbcType=VARCHAR},
      ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
      ACCOUNT_DES = #{record.accountDes,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.seasonteam.season.model.Account" >
    update account
    <set >
      <if test="userid != null" >
        USERID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountDes != null" >
        ACCOUNT_DES = #{accountDes,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.seasonteam.season.model.Account" >
    update account
    set USERID = #{userid,jdbcType=VARCHAR},
      ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      ACCOUNT_DES = #{accountDes,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </update>
</mapper>